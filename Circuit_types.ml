  open Circuit
let getstr = function
| ACCEPT  -> "ACCEPT"
| ADD  -> "ADD"
| AMPERSAND  -> "AMPERSAND"
| AND  -> "AND"
| ANDR  -> "ANDR"
| ASCLOCK  -> "ASCLOCK"
| ASSINT  -> "ASSINT"
| ASUINT  -> "ASUINT"
| AT  -> "AT"
| BACKQUOTE  -> "BACKQUOTE"
| BACKSLASH  -> "BACKSLASH"
| BITS  -> "BITS"
| CARET  -> "CARET"
| CAT  -> "CAT"
| CIRCUIT  -> "CIRCUIT"
| CLOCK  -> "CLOCK"
| CMEM  -> "CMEM"
| COLON  -> "COLON"
| COMMA  -> "COMMA"
| CONS1  _ -> "CONS1"
| CONS2  _ -> "CONS2"
| CONS3  _ -> "CONS3"
| CONS4  _ -> "CONS4"
| CVT  -> "CVT"
| DATA_TYPE  -> "DATA_TYPE"
| DEFAULT  -> "DEFAULT"
| DEFNAME  -> "DEFNAME"
| DEPTH  -> "DEPTH"
| DIV  -> "DIV"
| DOLLAR  -> "DOLLAR"
| DOT  -> "DOT"
| DOUBLEQUOTE  -> "DOUBLEQUOTE"
| DSHL  -> "DSHL"
| DSHR  -> "DSHR"
| ELSE  -> "ELSE"
| EMPTY_TOKEN  -> "EMPTY_TOKEN"
| END  -> "END"
| EOF_TOKEN  -> "EOF_TOKEN"
| EQ  -> "EQ"
| EQUALS  -> "EQUALS"
| ERROR  -> "ERROR"
| ERROR_TOKEN  -> "ERROR_TOKEN"
| EXTMODULE  -> "EXTMODULE"
| FLIP  -> "FLIP"
| GEQ  -> "GEQ"
| GREATER  -> "GREATER"
| GT  -> "GT"
| HASH  -> "HASH"
| HEAD  -> "HEAD"
| HYPHEN  -> "HYPHEN"
| ID  _ -> "ID"
| INPUT  -> "INPUT"
| INST  -> "INST"
| INT  _ -> "INT"
| IS  -> "IS"
| LBRACE  -> "LBRACE"
| LBRACK  -> "LBRACK"
| LEQ  -> "LEQ"
| LESS  -> "LESS"
| LINEFEED  -> "LINEFEED"
| LPAREN  -> "LPAREN"
| LT  -> "LT"
| MEM  -> "MEM"
| MOD  -> "MOD"
| MODULE  -> "MODULE"
| MPORT  -> "MPORT"
| MUL  -> "MUL"
| MUX  -> "MUX"
| NEG  -> "NEG"
| NEQ  -> "NEQ"
| NEW  -> "NEW"
| NODE  -> "NODE"
| NOT  -> "NOT"
| OF  -> "OF"
| OLD  -> "OLD"
| OR  -> "OR"
| ORR  -> "ORR"
| OUTPUT  -> "OUTPUT"
| PAD  -> "PAD"
| PARAMETER  -> "PARAMETER"
| PERCENT  -> "PERCENT"
| PLING  -> "PLING"
| PRINTF  -> "PRINTF"
| QUERY  -> "QUERY"
| QUOTE  -> "QUOTE"
| RBRACE  -> "RBRACE"
| RBRACK  -> "RBRACK"
| READER  -> "READER"
| READWRITER  -> "READWRITER"
| READ_LATENCY  -> "READ_LATENCY"
| READ_UNDER_WRITE  -> "READ_UNDER_WRITE"
| REG  -> "REG"
| RPAREN  -> "RPAREN"
| SHL  -> "SHL"
| SHR  -> "SHR"
| SINT  -> "SINT"
| SKIP  -> "SKIP"
| SLIST  _ -> "SLIST"
| SMEM  -> "SMEM"
| STOP  -> "STOP"
| STRING  _ -> "STRING"
| SUB  -> "SUB"
| TAIL  -> "TAIL"
| TILDE  -> "TILDE"
| TLIST  _ -> "TLIST"
| TUPLE10  _ -> "TUPLE10"
| TUPLE11  _ -> "TUPLE11"
| TUPLE12  _ -> "TUPLE12"
| TUPLE13  _ -> "TUPLE13"
| TUPLE14  _ -> "TUPLE14"
| TUPLE15  _ -> "TUPLE15"
| TUPLE16  _ -> "TUPLE16"
| TUPLE17  _ -> "TUPLE17"
| TUPLE18  _ -> "TUPLE18"
| TUPLE19  _ -> "TUPLE19"
| TUPLE2  _ -> "TUPLE2"
| TUPLE20  _ -> "TUPLE20"
| TUPLE21  _ -> "TUPLE21"
| TUPLE22  _ -> "TUPLE22"
| TUPLE23  _ -> "TUPLE23"
| TUPLE24  _ -> "TUPLE24"
| TUPLE25  _ -> "TUPLE25"
| TUPLE26  _ -> "TUPLE26"
| TUPLE27  _ -> "TUPLE27"
| TUPLE28  _ -> "TUPLE28"
| TUPLE29  _ -> "TUPLE29"
| TUPLE3  _ -> "TUPLE3"
| TUPLE30  _ -> "TUPLE30"
| TUPLE31  _ -> "TUPLE31"
| TUPLE32  _ -> "TUPLE32"
| TUPLE33  _ -> "TUPLE33"
| TUPLE34  _ -> "TUPLE34"
| TUPLE35  _ -> "TUPLE35"
| TUPLE36  _ -> "TUPLE36"
| TUPLE37  _ -> "TUPLE37"
| TUPLE4  _ -> "TUPLE4"
| TUPLE5  _ -> "TUPLE5"
| TUPLE6  _ -> "TUPLE6"
| TUPLE7  _ -> "TUPLE7"
| TUPLE8  _ -> "TUPLE8"
| TUPLE9  _ -> "TUPLE9"
| UINT  -> "UINT"
| UNDEFINED  -> "UNDEFINED"
| UNDERSCORE  -> "UNDERSCORE"
| VALIDIF  -> "VALIDIF"
| VBAR  -> "VBAR"
| WHEN  -> "WHEN"
| WIRE  -> "WIRE"
| WITH  -> "WITH"
| WRITER  -> "WRITER"
| WRITE_LATENCY  -> "WRITE_LATENCY"
| XOR  -> "XOR"
| XORR  -> "XORR"

let (typehash:(string,unit)Hashtbl.t) = Hashtbl.create 257
