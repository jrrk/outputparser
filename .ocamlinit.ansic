open Translation_unit_list
open Translation_unit_list_types
open Translation_unit_list_main
open Translation_unit_list_filt

(*
let filtd () = List.filter (search (function TUPLE2(TUPLE2(TYPEDEF _, _), _) -> true | _ -> false)) (List.map (fun (a,b) -> TUPLE2(a,b)) !(Translation_unit_list.declst));;
*)

let chan = open_out "mykernel.c";;
let refs = frefs();;
let rslt = dump refs chan "main" [|""; "convert.i"; "dSFMT.i"; "dynamics.i"; "kernel.i"; "main.i"; "support.i"; "dump.i"|];;
close_out chan;;
let (fnlst, extlst, enumlst, structlst, unionlst, ftyplst, typlst, errlst, redeflst) = rslt;;

let typ,TLIST x = Hashtbl.find inits "walker";;
let TUPLE2 (TUPLE2 (TUPLE2 (DOT, IDENTIFIER field), EQUALS), TUPLE3
        (LBRACE, TLIST lst, RBRACE))= (List.nth x 0);;
let tenth = List.nth x 10;;
dump_body (frefs()) tenth;;
